/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.micromanager.magellan.internal.gui;

import java.awt.event.ActionListener;
import javax.swing.DefaultCellEditor;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import org.micromanager.magellan.internal.channels.MagellanChannelGroupSettings;

/**
 *
 * @author henrypinkard
 */
public class ExploreChannelsPanel extends javax.swing.JPanel {

   private MagellanChannelGroupSettings channels_; //TODO: what dis
   
   /**
    * Creates new form ExploreChannelsPanel
    */
   public ExploreChannelsPanel() {
      initComponents();

      //left justified editor
      JTextField tf = new JTextField();
      tf.setHorizontalAlignment(SwingConstants.LEFT);
      DefaultCellEditor ed = new DefaultCellEditor(tf);
      channelsTable_.getColumnModel().getColumn(2).setCellEditor(ed);
      //and renderer
      DefaultTableCellRenderer renderer = new DefaultTableCellRenderer();
      renderer.setHorizontalAlignment(SwingConstants.LEFT); // left justify
      channelsTable_.getColumnModel().getColumn(2).setCellRenderer(renderer);
      channelsTable_.getColumnModel().getColumn(0).setMaxWidth(30); //Acitve checkbox column

//      //TODO: start in explore
//      tabbedPane_.setSelectedIndex(0);
//
//      if (!disp.isExploreAcquisiton()) {
//         exploreButton_.setVisible(false);
//         acquireAtCurrentButton_.setVisible(false);
//         for (ActionListener l : exploreButton_.getActionListeners()) {
//            exploreButton_.removeActionListener(l);
//         }
//         for (ActionListener l : acquireAtCurrentButton_.getActionListeners()) {
//            acquireAtCurrentButton_.removeActionListener(l);
//         }
//      }
//      //knitially disable surfaces and grids
//      tabbedPane_.setEnabledAt(display_.isExploreAcquisiton() ? 2 : 0, false);
//
//      //TODO: how to do this on shutdown
//      if (display_.isExploreAcquisiton()) {
//         ((SimpleChannelTableModel) channelsTable_.getModel()).shutdown();
//      }
   }

   /**
    * This method is called from within the constructor to initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is always
    * regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {

      syncExposuresButton_ = new javax.swing.JButton();
      jScrollPane1 = new javax.swing.JScrollPane();
      channelsTable_ = new javax.swing.JTable();
      selectUseAllButton_ = new javax.swing.JButton();
      acquireAtCurrentButton_ = new javax.swing.JButton();
      exploreButton_ = new javax.swing.JToggleButton();

      syncExposuresButton_.setText("Sync exposures");
      syncExposuresButton_.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            syncExposuresButton_ActionPerformed(evt);
         }
      });

      channelsTable_.setModel(new SimpleChannelTableModel(channels_,false));
      jScrollPane1.setViewportView(channelsTable_);

      selectUseAllButton_.setText("Select all");
      selectUseAllButton_.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            selectUseAllButton_ActionPerformed(evt);
         }
      });

      acquireAtCurrentButton_.setText("Acquire tile here");
      acquireAtCurrentButton_.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            acquireAtCurrentButton_ActionPerformed(evt);
         }
      });

      exploreButton_.setSelected(true);
      exploreButton_.setText("Explore");
      exploreButton_.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            exploreButton_ActionPerformed(evt);
         }
      });

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
      this.setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addComponent(exploreButton_)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(acquireAtCurrentButton_)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(selectUseAllButton_)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(syncExposuresButton_)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
         .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 518, Short.MAX_VALUE)
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(syncExposuresButton_)
               .addComponent(selectUseAllButton_)
               .addComponent(acquireAtCurrentButton_)
               .addComponent(exploreButton_))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE))
      );
   }// </editor-fold>//GEN-END:initComponents

   private void syncExposuresButton_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_syncExposuresButton_ActionPerformed
      ((SimpleChannelTableModel) channelsTable_.getModel()).synchronizeExposures();
      ((SimpleChannelTableModel) channelsTable_.getModel()).fireTableDataChanged();
   }//GEN-LAST:event_syncExposuresButton_ActionPerformed

   private void selectUseAllButton_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectUseAllButton_ActionPerformed
      ((SimpleChannelTableModel) channelsTable_.getModel()).selectAllChannels();
      ((SimpleChannelTableModel) channelsTable_.getModel()).fireTableDataChanged();
   }//GEN-LAST:event_selectUseAllButton_ActionPerformed

   private void exploreButton_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exploreButton_ActionPerformed
//      if (display_.isExploreAcquisiton() && exploreButton_.isSelected() && tabbedPane_.getSelectedIndex() == 2) {
//         tabbedPane_.setSelectedIndex(0); //switch away from surface grid mode when explorign activated
//      }
//      updateMode();
   }//GEN-LAST:event_exploreButton_ActionPerformed

   private void acquireAtCurrentButton_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acquireAtCurrentButton_ActionPerformed
//      display_.acquireTileAtCurrentPosition();
   }//GEN-LAST:event_acquireAtCurrentButton_ActionPerformed


   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JButton acquireAtCurrentButton_;
   private javax.swing.JTable channelsTable_;
   private javax.swing.JToggleButton exploreButton_;
   private javax.swing.JScrollPane jScrollPane1;
   private javax.swing.JButton selectUseAllButton_;
   private javax.swing.JButton syncExposuresButton_;
   // End of variables declaration//GEN-END:variables
}
